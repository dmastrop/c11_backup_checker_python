db_host="10.36.7.11"
db_username="backup_script"
database="backups"
db_table="list"
zulip_organization="zulip.linode.cloudnetworktesting.com"
zulip_stream="vps"
zulip_topic="backups"
zulip_bot_name="cloudnetworktesting-bot"




# NOTE: this will be pushed to repo but the truly secret vars have been removed and are stored on github project level for this repo.
# THese are the maria db backup password and the zulip bot api key.
# comments:
#This is for the python docker container.  Db is the mariadb on the VPS that the python app has to query.  Zulip is the messaging service #that the python app will send updates to.
#the db_host is the loopback on the VPS and is reachable by all docker containers
#If ran this remotely this would need to be a public ip and mariadb would have to allow connections from this ip address
#NOTE because this is all on the VPS docker to docker is very easy and the python app docker container will be able to query the mariadb #very easily
#The zulip was a challenge because the python script will connect to the stream via public VPS ip zulip.linode.cloudnetworktesting.com. #That was why there were iptables and whitelist issues.(zulip whitelist has to allow docker subnets into it and iptables INPUT chain has to #have ALLOW for 80 and 443 from docker subnet to VPS public ip (zulip.linode.cloudnetworktesting.com)

#Backup_script user Is not allowed to connect from ips assigned to docker containers.  The python app is running in docker container and #will attempt to connect with this user to query the mariadb that is running on the VPS.  5 additional blocks for the docker subnets need to #be added the mariadb role mariadb/tasks/users.yml in the ansible playbook and the role needs to be re-run
#NOTE: the iptables filter INPUT Table which will be hit with docker to mariadb traffic already has the docker subnet to 3306 ALLOW. This is #very similar to the docker to zulip issue encountered earlier. That required whitelisting to be added to traefik zulip config and similar INPUT #ALLOW rules for 80/443 to be added.
# the ansible role mariadb needs to be re-run for the above
#
# the zulip org is found with zulip@zulip:~/deployments/2024-09-23-22-46-03$ ./manage.py list_realms
# the zulip_organization is zulip.linode.cloudnetworktesting.com
# to send a message to a stream must create the stream (called channel now) first
# zulip 9.2: To better match terminology familiar from other apps, streams have been renamed to channels across the app in this release
# zulip topic is backups
# for the bot name use cloudnetworktesting-bot. The email will use this as a prefix as well and configure the same as email prefix for bot (see below). The API key will then be created with the bot.
# For the zulip_bot_name in .env make sure to use the email prefix. Since name and prefix are same in my case just use the above
# The email prefix is what is used to authenticate to the zulip bot, not the name. If the name is different and you use it for the zulip_bot_name it will not work


